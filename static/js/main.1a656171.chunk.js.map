{"version":3,"sources":["Main/padlock.png","Header/header.js","SignIn/SignIn.js","Main/StyledComponent/sign.js","Main/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","SignIn","state","mail","password","border","saveEmail","event","setState","target","value","savePassword","className","src","padlock","alt","type","placeholder","this","style","onChange","href","onClick","showBlock","Component","Sign","styled","p","Name","input","Surname","Mail","Password","Checkbox","Button","button","Display","div","Main","showSignIn","name","surname","saveName","saveSurname","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a656171.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/padlock.e5d0fcfd.png\";","import React from \"react\";\r\nimport \"./header.css\"\r\n\r\nconst Header =()=>{\r\n  return(\r\n    <div>\r\n    <h1>Homework №18</h1>\r\n    <h2>\"StyledComponents. Animations</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport padlock from \"../Main/padlock.png\"\r\nimport \"./SignIn.css\"\r\n\r\nexport default class SignIn extends Component {\r\n\r\n    state={\r\n        mail:\"Your Mail \",\r\n        password: \"Password\",\r\n        border:\"\"    \r\n    }\r\n    \r\n    saveEmail = (event) => {\r\n        this.setState({\r\n            mail:event.target.value,\r\n            border:\"4px solid blue\",            \r\n        })\r\n    }\r\n    savePassword = (event) => {\r\n        this.setState({\r\n            password:event.target.value,\r\n            border:\"4px solid blue\",      \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapperIn\">\r\n                 <div className=\"display\">\r\n                      <img src={padlock} alt=\"lock\"className=\"lockPng\"/> \r\n                      <p className=\"signIn\">Sign in</p>  \r\n                      <input type=\"mail\"className=\"mailIn\"placeholder={this.state.mail}style={{border:this.state.border}} onChange={this.saveEmail} ></input>\r\n                      <input type=\"password\"className=\"passwordIn\" style={{border:this.state.border}} placeholder={this.state.password}onChange={this.savePassword}></input>\r\n                      <input type=\"checkbox\"className=\"checkboxIn\"></input>\r\n                      <p className=\"wantIn\">Remember me</p>\r\n                      <button className =\"btnIn\">Sign in</button>\r\n                      <p className=\"forgotIn\">Forgot password?</p>\r\n                      <a className= \"hrefIn\" href=\"/signUp\"onClick={this.showBlock}>Dont have an account? Sign up</a>\r\n                     <p className=\"footerIn\">Copyright © Your Website 2020.</p>\r\n                </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\n   const Sign= styled.p`\r\n           color: white;\r\n           position: absolute;\r\n           top:90px;\r\n           font-size: 30px;\r\n           left:140px;\r\n`\r\n\r\n\r\n\r\nconst Name=styled.input`\r\n\r\nposition: absolute;\r\ntop:160px;\r\nleft:30px;\r\nheight: 35px;\r\nborder: 2px solid whitesmoke;\r\nbackground: #1b1b1b;\r\nborder-radius: 7px;\r\ncolor:white;\r\npadding: 3px;\r\n`\r\n\r\nconst Surname=styled.input`\r\n\r\nposition: absolute;\r\ntop:160px;\r\nright: 30px;\r\nheight: 35px;\r\nborder: 2px solid whitesmoke;\r\nbackground: #1b1b1b;\r\nborder-radius: 7px;\r\ncolor:white;\r\npadding: 3px;\r\n\r\n`\r\n\r\nconst Mail=styled.input`\r\nposition: absolute;\r\ntop:220px;\r\nright: 35px;\r\nheight: 35px;\r\nwidth:330px ;\r\nborder: 2px solid whitesmoke;\r\nbackground: #1b1b1b;\r\nborder-radius: 7px;\r\ncolor:white;\r\npadding: 3px;\r\n\r\n`\r\nconst Password=styled.input`\r\n    position: absolute;\r\n    top:290px;\r\n    right: 35px;\r\n    height: 35px;\r\n    width:330px ;\r\n    border: 2px solid whitesmoke;\r\n    background: #1b1b1b;\r\n    border-radius: 7px;\r\n    color:white;\r\n    padding: 3px;\r\n\r\n`\r\nconst Checkbox=styled.input`\r\n\r\n     position: absolute;\r\n    top:350px;\r\n    left: 33px;\r\n    width: 20px;\r\n\r\n`\r\n\r\nconst Button=styled.button`\r\n\r\nposition: absolute;\r\ntop:400px;\r\nright: 35px;\r\nheight: 45px;\r\nwidth:330px ;\r\nborder: 2px solid whitesmoke;\r\nbackground:#90CAF9; \r\nborder-radius: 10px;\r\ncolor:#1B1B1B;\r\npadding: 3px;\r\nfont-size: 20px;\r\n\r\n\r\n`\r\nconst Display = styled.div`\r\n          position: absolute;\r\n          top: 50%;\r\n          left: 50%;\r\n          transform: translate(-50%, -50%);\r\n          z-index: 55555;\r\n          height: 520px;\r\n          width: 412px;\r\n          background: #1b1b1b;\r\n          border-radius: 6px;\r\n          text-align: center;\r\n`\r\n\r\n\r\n\r\n    export  {Sign,Name,Surname,Mail,Password,Checkbox,Button,Display}","import React, { Component } from 'react'\r\nimport \"./main.css\"\r\nimport padlock from \"./padlock.png\"\r\nimport SignIn from \"../SignIn/SignIn\"\r\nimport {Sign,Name,Surname,Mail,Password,Checkbox,Button,Display}from \"./StyledComponent/sign.js\"\r\n\r\nexport default class Main extends Component {\r\n    state={\r\n        showSignIn:false,\r\n        mail:\"Your Mail \",\r\n        password: \"Password\",\r\n        name:\"First Name *\",\r\n        surname:\"Last Name*\",\r\n        border:\"\"\r\n    }\r\n    \r\n    saveEmail = (event) => {\r\n        this.setState({\r\n            mail:event.target.value,\r\n            border:\"4px solid blue\"\r\n        })\r\n    }\r\n    savePassword = (event) => {\r\n        this.setState({\r\n            password:event.target.value,\r\n            border:\"4px solid blue\",\r\n        })\r\n    }\r\n\r\n    saveName = (event) => {\r\n        this.setState({\r\n            name:event.target.value,\r\n            border:\"4px solid blue\",\r\n        })\r\n    }\r\n\r\n    saveSurname = (event) => {\r\n        this.setState({\r\n            surname:event.target.value,\r\n            border:\"4px solid blue\",\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n               <Display>\r\n                <img src={padlock} alt=\"lock\"className=\"lockPng\"/> \r\n                <Sign >Sign up</Sign >\r\n                <Name \r\n                     type =\"text\"\r\n                     style={{border:this.state.border}}\r\n                     placeholder={this.state.name}\r\n                     onChange={this.saveName}>\r\n                </Name>\r\n                <Surname \r\n                    type=\"text\"\r\n                    style={{border:this.state.border}}\r\n                    placeholder={this.state.surname}\r\n                    onChange={this.saveSurname}>                \r\n                 </Surname>\r\n                <Mail \r\n                     style={{border:this.state.border}} \r\n                     placeholder={this.state.mail} \r\n                     type=\"mail\"\r\n                    onChange={this.saveEmail} >  \r\n                </Mail>\r\n                <Password \r\n                     style={{border:this.state.border}}\r\n                     type=\"password\"\r\n                     placeholder={this.state.password}\r\n                     onChange={this.savePassword}>\r\n                 </Password>\r\n                <Checkbox type=\"checkbox\"></Checkbox>\r\n                      <p className=\"wantUp\">I want to receive inspiration marketing via mail</p>\r\n               <Button>Sign up</Button>\r\n                <div className=\"href\">\r\n                     <a href=\"/signIn\" >Already have an account? Sign in</a>\r\n                </div> \r\n                   <p className=\"footer\">Copyright © Your Website 2020.</p>\r\n                <div>\r\n                    <span></span>\r\n               </div>\r\n               </Display>\r\n           </div>\r\n       )\r\n    }\r\n}\r\n","import React from 'react';\nimport {BrowserRouter,Route,Switch,Redirect} from \"react-router-dom\"\nimport Header from\"./Header/header\"\nimport Main from\"./Main/main\"\nimport SignIn from\"./SignIn/SignIn\"\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n   <div className=\"App\">\n   <BrowserRouter>\n     <Header />\n     <Main />\n     <Switch>\n        <Route path=\"/signIn\">\n          <SignIn />\n        </Route>\n      </Switch>\n\t</BrowserRouter>\n    </div>\n    \n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}